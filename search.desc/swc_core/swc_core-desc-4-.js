searchState.loadedDescShard("swc_core", 4, "The archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>TsType::TsOptionalType</code>\nThe archived counterpart of <code>ParamOrTsParamProp::TsParamProp</code>\nThe archived counterpart of <code>TsType::TsParenthesizedType</code>\nThe archived counterpart of …\nThe archived counterpart of <code>TsEntityName::TsQualifiedName</code>\nThe archived counterpart of <code>TsType::TsRestType</code>\nThe resolver for <code>Expr::TsSatisfies</code>\nThe archived counterpart of <code>Expr::TsSatisfies</code>\nThe resolver for <code>SimpleAssignTarget::TsSatisfies</code>\nThe archived counterpart of <code>SimpleAssignTarget::TsSatisfies</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>TsType::TsThisType</code>\nThe archived counterpart of <code>TsThisTypeOrIdent::TsThisType</code>\nThe archived counterpart of <code>TsType::TsTupleType</code>\nThe archived counterpart of <code>Decl::TsTypeAlias</code>\nThe resolver for <code>Expr::TsTypeAssertion</code>\nThe archived counterpart of <code>Expr::TsTypeAssertion</code>\nThe resolver for <code>SimpleAssignTarget::TsTypeAssertion</code>\nThe archived counterpart of …\nThe archived counterpart of <code>TsType::TsTypeLit</code>\nThe archived counterpart of <code>TsType::TsTypeOperator</code>\nThe archived counterpart of <code>TsType::TsTypePredicate</code>\n<code>typeof</code> operator\nThe archived counterpart of <code>TsType::TsTypeQuery</code>\nThe archived counterpart of <code>TsType::TsTypeRef</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>UnaryOp::TypeOf</code>\n<code>typeof</code>\nThe resolver for <code>Expr::Unary</code>\nThe archived counterpart of <code>Expr::Unary</code>\nThe resolver for an archived <code>UnaryExpr</code>\nThe archived counterpart of <code>TsTypeOperatorOp::Unique</code>\n<code>unique</code>\nThe resolver for <code>Expr::Update</code>\nThe archived counterpart of <code>Expr::Update</code>\n<code>++v</code>, <code>--v</code>, <code>v++</code>, <code>v--</code>\nThe resolver for an archived <code>UpdateExpr</code>\nThe archived counterpart of <code>Decl::Using</code>\nThe archived counterpart of <code>ForHead::UsingDecl</code>\nThe archived counterpart of <code>Decl::Var</code>\nThe archived counterpart of <code>VarDeclKind::Var</code>\n<code>var</code>\nThe archived counterpart of <code>ForHead::VarDecl</code>\nThe archived counterpart of <code>VarDeclOrExpr::VarDecl</code>\nThe archived counterpart of <code>UnaryOp::Void</code>\n<code>void</code>\nThe archived counterpart of <code>Stmt::While</code>\nThe archived counterpart of <code>Stmt::With</code>\nThe resolver for <code>Expr::Yield</code>\nThe archived counterpart of <code>Expr::Yield</code>\nThe resolver for an archived <code>YieldExpr</code>\nThe archived counterpart of <code>BinaryOp::ZeroFillRShift</code>\n<code>&gt;&gt;&gt;</code>\nThe archived counterpart of <code>AssignOp::ZeroFillRShiftAssign</code>\n<code>&gt;&gt;&gt;=</code>\nThe archived counterpart of <code>ClassProp::accessibility</code>\nTypescript extension.\nThe archived counterpart of <code>PrivateProp::accessibility</code>\nTypescript extension.\nThe archived counterpart of <code>ClassMethod::accessibility</code>\nTypescript extension.\nThe archived counterpart of <code>PrivateMethod::accessibility</code>\nTypescript extension.\nThe archived counterpart of <code>Constructor::accessibility</code>\nThe archived counterpart of <code>AutoAccessor::accessibility</code>\nTypescript extension.\nThe archived counterpart of <code>TsParamProp::accessibility</code>\nAt least one of <code>accessibility</code> or <code>readonly</code> must be set.\nThe archived counterpart of <code>CondExpr::alt</code>\nThe archived counterpart of <code>IfStmt::alt</code>\nThe archived counterpart of <code>UnaryExpr::arg</code>\nThe archived counterpart of <code>UpdateExpr::arg</code>\nThe archived counterpart of <code>YieldExpr::arg</code>\nThe archived counterpart of <code>AwaitExpr::arg</code>\nThe archived counterpart of <code>RestPat::arg</code>\nThe archived counterpart of <code>ReturnStmt::arg</code>\nThe archived counterpart of <code>ThrowStmt::arg</code>\nThe archived counterpart of <code>TsImportType::arg</code>\nThe archived counterpart of <code>CallExpr::args</code>\nThe archived counterpart of <code>NewExpr::args</code>\nThe archived counterpart of <code>OptCall::args</code>\nThe archived counterpart of <code>TsTypePredicate::asserts</code>\nThe archived counterpart of <code>JSXOpeningElement::attrs</code>\nThe archived counterpart of <code>OptChainExpr::base</code>\nThis is boxed to reduce the type size of Expr.\nThe archived counterpart of <code>TryStmt::block</code>\nThe archived counterpart of <code>Class::body</code>\nThe archived counterpart of <code>Constructor::body</code>\nThe archived counterpart of <code>StaticBlock::body</code>\nThe archived counterpart of <code>ArrowExpr::body</code>\nThis is boxed to reduce the type size of Expr.\nThe archived counterpart of <code>Function::body</code>\nThe archived counterpart of <code>Module::body</code>\nThe archived counterpart of <code>Script::body</code>\nThe archived counterpart of <code>GetterProp::body</code>\nThe archived counterpart of <code>SetterProp::body</code>\nThe archived counterpart of <code>WithStmt::body</code>\nThe archived counterpart of <code>LabeledStmt::body</code>\nThe archived counterpart of <code>WhileStmt::body</code>\nThe archived counterpart of <code>DoWhileStmt::body</code>\nThe archived counterpart of <code>ForStmt::body</code>\nThe archived counterpart of <code>ForInStmt::body</code>\nThe archived counterpart of <code>ForOfStmt::body</code>\nThe archived counterpart of <code>CatchClause::body</code>\nThe archived counterpart of <code>TsInterfaceDecl::body</code>\nThe archived counterpart of <code>TsInterfaceBody::body</code>\nThe archived counterpart of <code>TsModuleDecl::body</code>\nThe archived counterpart of <code>TsModuleBlock::body</code>\nThe archived counterpart of <code>TsNamespaceDecl::body</code>\nThe archived counterpart of <code>CallExpr::callee</code>\nThe archived counterpart of <code>NewExpr::callee</code>\nThe archived counterpart of <code>OptCall::callee</code>\nThe archived counterpart of <code>SwitchStmt::cases</code>\nThe archived counterpart of <code>TsConditionalType::check_type</code>\nThe archived counterpart of <code>JSXElement::children</code>\nThe archived counterpart of <code>JSXFragment::children</code>\nThe archived counterpart of <code>ClassDecl::class</code>\nThe archived counterpart of <code>ClassExpr::class</code>\nThe archived counterpart of <code>JSXElement::closing</code>\nThe archived counterpart of <code>JSXFragment::closing</code>\nGets a custom text range to use when emitting comments.\nThe archived counterpart of <code>TsPropertySignature::computed</code>\nThe archived counterpart of <code>TsGetterSignature::computed</code>\nThe archived counterpart of <code>TsSetterSignature::computed</code>\nThe archived counterpart of <code>TsMethodSignature::computed</code>\nThe archived counterpart of <code>CondExpr::cons</code>\nThe archived counterpart of <code>IfStmt::cons</code>\nThe archived counterpart of <code>SwitchCase::cons</code>\nThe archived counterpart of <code>TsTypeParam::constraint</code>\nThe archived counterpart of <code>TplElement::cooked</code>\nThis value is never used by <code>swc_ecma_codegen</code>, and this …\nThe archived counterpart of <code>Class::ctxt</code>\nThe archived counterpart of <code>PrivateProp::ctxt</code>\nThe archived counterpart of <code>Constructor::ctxt</code>\nThe archived counterpart of <code>VarDecl::ctxt</code>\nThe archived counterpart of <code>CallExpr::ctxt</code>\nThe archived counterpart of <code>NewExpr::ctxt</code>\nThe archived counterpart of <code>ArrowExpr::ctxt</code>\nThe archived counterpart of <code>TaggedTpl::ctxt</code>\nThe archived counterpart of <code>OptCall::ctxt</code>\nThe archived counterpart of <code>Function::ctxt</code>\nThe archived counterpart of <code>Ident::ctxt</code>\nThe archived counterpart of <code>BlockStmt::ctxt</code>\nThe archived counterpart of <code>ExportDecl::decl</code>\nThe archived counterpart of <code>ExportDefaultDecl::decl</code>\nThe archived counterpart of <code>ClassProp::declare</code>\nThe archived counterpart of <code>FnDecl::declare</code>\nThe archived counterpart of <code>ClassDecl::declare</code>\nThe archived counterpart of <code>VarDecl::declare</code>\nThe archived counterpart of <code>TsInterfaceDecl::declare</code>\nThe archived counterpart of <code>TsTypeAliasDecl::declare</code>\nThe archived counterpart of <code>TsEnumDecl::declare</code>\nThe archived counterpart of <code>TsModuleDecl::declare</code>\nThe archived counterpart of <code>TsNamespaceDecl::declare</code>\nThe archived counterpart of <code>VarDecl::decls</code>\nThe archived counterpart of <code>UsingDecl::decls</code>\nThe archived counterpart of <code>Class::decorators</code>\nThe archived counterpart of <code>ClassProp::decorators</code>\nThe archived counterpart of <code>PrivateProp::decorators</code>\nThe archived counterpart of <code>AutoAccessor::decorators</code>\nThe archived counterpart of <code>Function::decorators</code>\nThe archived counterpart of <code>Param::decorators</code>\nThe archived counterpart of <code>TsParamProp::decorators</code>\nThe archived counterpart of <code>TsTypeParam::default</code>\nThe archived counterpart of <code>ClassProp::definite</code>\nThe archived counterpart of <code>PrivateProp::definite</code>\nThe archived counterpart of <code>AutoAccessor::definite</code>\nThe archived counterpart of <code>VarDeclarator::definite</code>\nTypescript only\nThe archived counterpart of <code>YieldExpr::delegate</code>\nThe archived counterpart of <code>SwitchStmt::discriminant</code>\nThe archived counterpart of <code>SpreadElement::dot3_token</code>\nThe archived counterpart of <code>RestPat::dot3_token</code>\nThe archived counterpart of <code>TsArrayType::elem_type</code>\nThe archived counterpart of <code>TsTupleType::elem_types</code>\nThe archived counterpart of <code>ArrayLit::elems</code>\nThe archived counterpart of <code>ArrayPat::elems</code>\nThe archived counterpart of <code>Regex::exp</code>\nThe archived counterpart of …\nThe archived counterpart of <code>ExportNamedSpecifier::exported</code>\n<code>Some(bar)</code> in <code>export { foo as bar }</code>\nThe archived counterpart of <code>Decorator::expr</code>\nThe archived counterpart of <code>SpreadElement::expr</code>\nThe archived counterpart of <code>ParenExpr::expr</code>\nThe archived counterpart of <code>ExprOrSpread::expr</code>\nThe archived counterpart of <code>JSXExprContainer::expr</code>\nThe archived counterpart of <code>JSXSpreadChild::expr</code>\nThe archived counterpart of <code>ExportDefaultExpr::expr</code>\nThe archived counterpart of <code>ComputedPropName::expr</code>\nThe archived counterpart of <code>ExprStmt::expr</code>\nThe archived counterpart of <code>TsExprWithTypeArgs::expr</code>\nThe archived counterpart of <code>TsExternalModuleRef::expr</code>\nThe archived counterpart of <code>TsExportAssignment::expr</code>\nThe archived counterpart of <code>TsAsExpr::expr</code>\nThe archived counterpart of <code>TsTypeAssertion::expr</code>\nThe archived counterpart of <code>TsNonNullExpr::expr</code>\nThe archived counterpart of <code>TsSatisfiesExpr::expr</code>\nThe archived counterpart of <code>TsConstAssertion::expr</code>\nThe archived counterpart of <code>TsInstantiation::expr</code>\nThe archived counterpart of <code>TsTypeQuery::expr_name</code>\nThe archived counterpart of <code>SeqExpr::exprs</code>\nThe archived counterpart of <code>Tpl::exprs</code>\nThe archived counterpart of <code>TsInterfaceDecl::extends</code>\nThe archived counterpart of <code>TsConditionalType::extends_type</code>\nThe archived counterpart of <code>TsConditionalType::false_type</code>\nThe archived counterpart of <code>TryStmt::finalizer</code>\nThe archived counterpart of <code>Regex::flags</code>\nThe archived counterpart of <code>ClassMethod::function</code>\nThe archived counterpart of <code>PrivateMethod::function</code>\nThe archived counterpart of <code>FnDecl::function</code>\nThe archived counterpart of <code>FnExpr::function</code>\nThe archived counterpart of <code>MethodProp::function</code>\nThe archived counterpart of <code>TsModuleDecl::global</code>\nIn TypeScript, this is only available through<code>node.flags</code>.\nThe archived counterpart of <code>TsNamespaceDecl::global</code>\nIn TypeScript, this is only available through<code>node.flags</code>.\nThe archived counterpart of <code>TryStmt::handler</code>\nThe archived counterpart of <code>BindingIdent::id</code>\nThe archived counterpart of <code>TsInterfaceDecl::id</code>\nThe archived counterpart of <code>TsTypeAliasDecl::id</code>\nThe archived counterpart of <code>TsEnumDecl::id</code>\nThe archived counterpart of <code>TsEnumMember::id</code>\nThe archived counterpart of <code>TsModuleDecl::id</code>\nThe archived counterpart of <code>TsNamespaceDecl::id</code>\nThe archived counterpart of <code>TsImportEqualsDecl::id</code>\nThe archived counterpart of <code>TsNamespaceExportDecl::id</code>\nThe archived counterpart of <code>FnDecl::ident</code>\nThe archived counterpart of <code>ClassDecl::ident</code>\nThe archived counterpart of <code>FnExpr::ident</code>\nThe archived counterpart of <code>ClassExpr::ident</code>\nThe archived counterpart of <code>Class::implements</code>\nTypescript extension.\nThe archived counterpart of <code>ImportNamedSpecifier::imported</code>\nThe archived counterpart of <code>TsIndexedAccessType::index_type</code>\nThe archived counterpart of <code>VarDeclarator::init</code>\nInitialization expression.\nThe archived counterpart of <code>ForStmt::init</code>\nThe archived counterpart of <code>TsEnumMember::init</code>\nThe archived counterpart of <code>Class::is_abstract</code>\nThe archived counterpart of <code>ClassProp::is_abstract</code>\nTypescript extension.\nThe archived counterpart of <code>ClassMethod::is_abstract</code>\nTypescript extension.\nThe archived counterpart of <code>PrivateMethod::is_abstract</code>\nTypescript extension.\nThe archived counterpart of <code>AutoAccessor::is_abstract</code>\nThe archived counterpart of <code>TsConstructorType::is_abstract</code>\nThe archived counterpart of <code>ArrowExpr::is_async</code>\nThe archived counterpart of <code>Function::is_async</code>\nif it’s an async function.\nThe archived counterpart of <code>UsingDecl::is_await</code>\nThe archived counterpart of <code>ForOfStmt::is_await</code>\nSpan of the await token.\nThe archived counterpart of <code>TsTypeParam::is_const</code>\nThe archived counterpart of <code>TsEnumDecl::is_const</code>\nThe archived counterpart of <code>TsImportEqualsDecl::is_export</code>\nThe archived counterpart of <code>ArrowExpr::is_generator</code>\nThe archived counterpart of <code>Function::is_generator</code>\nif it’s a generator.\nThe archived counterpart of <code>TsTypeParam::is_in</code>\nThe archived counterpart of <code>ClassProp::is_optional</code>\nThe archived counterpart of <code>PrivateProp::is_optional</code>\nThe archived counterpart of <code>ClassMethod::is_optional</code>\nThe archived counterpart of <code>PrivateMethod::is_optional</code>\nThe archived counterpart of <code>Constructor::is_optional</code>\nThe archived counterpart of <code>TsTypeParam::is_out</code>\nThe archived counterpart of <code>ClassProp::is_override</code>\nThe archived counterpart of <code>PrivateProp::is_override</code>\nThe archived counterpart of <code>ClassMethod::is_override</code>\nThe archived counterpart of <code>PrivateMethod::is_override</code>\nThe archived counterpart of <code>AutoAccessor::is_override</code>\nThe archived counterpart of <code>TsParamProp::is_override</code>\nThe archived counterpart of <code>ClassProp::is_static</code>\nThe archived counterpart of <code>PrivateProp::is_static</code>\nThe archived counterpart of <code>ClassMethod::is_static</code>\nThe archived counterpart of <code>PrivateMethod::is_static</code>\nThe archived counterpart of <code>AutoAccessor::is_static</code>\nThe archived counterpart of <code>TsIndexSignature::is_static</code>\nThe archived counterpart of …\nThe archived counterpart of …\n<code>type</code> in <code>export { type foo as bar }</code>\nThe archived counterpart of …\nThe archived counterpart of <code>ClassProp::key</code>\nThe archived counterpart of <code>PrivateProp::key</code>\nThe archived counterpart of <code>ClassMethod::key</code>\nThe archived counterpart of <code>PrivateMethod::key</code>\nThe archived counterpart of <code>Constructor::key</code>\nThe archived counterpart of <code>AutoAccessor::key</code>\nThe archived counterpart of <code>KeyValuePatProp::key</code>\nThe archived counterpart of <code>AssignPatProp::key</code>\nNote: This type is to help implementing visitor and the …\nThe archived counterpart of <code>KeyValueProp::key</code>\nThe archived counterpart of <code>AssignProp::key</code>\nThe archived counterpart of <code>GetterProp::key</code>\nThe archived counterpart of <code>SetterProp::key</code>\nThe archived counterpart of <code>MethodProp::key</code>\nThe archived counterpart of <code>TsPropertySignature::key</code>\nThe archived counterpart of <code>TsGetterSignature::key</code>\nThe archived counterpart of <code>TsSetterSignature::key</code>\nThe archived counterpart of <code>TsMethodSignature::key</code>\nThe archived counterpart of <code>ClassMethod::kind</code>\nThe archived counterpart of <code>PrivateMethod::kind</code>\nThe archived counterpart of <code>VarDecl::kind</code>\nThe archived counterpart of <code>MetaPropExpr::kind</code>\nThe archived counterpart of <code>TsKeywordType::kind</code>\nThe archived counterpart of <code>LabeledStmt::label</code>\nThe archived counterpart of <code>BreakStmt::label</code>\nThe archived counterpart of <code>ContinueStmt::label</code>\nThe archived counterpart of <code>TsTupleElement::label</code>\n<code>Ident</code> or <code>RestPat { arg: Ident }</code>\nThe archived counterpart of <code>BinExpr::left</code>\nThe archived counterpart of <code>AssignExpr::left</code>\nThe archived counterpart of <code>AssignPat::left</code>\nThe archived counterpart of <code>ForInStmt::left</code>\nThe archived counterpart of <code>ForOfStmt::left</code>\nThe archived counterpart of <code>TsQualifiedName::left</code>\nThe archived counterpart of <code>TsLitType::lit</code>\nThe archived counterpart of <code>ImportDefaultSpecifier::local</code>\nThe archived counterpart of <code>ImportStarAsSpecifier::local</code>\nThe archived counterpart of <code>ImportNamedSpecifier::local</code>\nThe archived counterpart of <code>TsTypeLit::members</code>\nThe archived counterpart of <code>TsEnumDecl::members</code>\nThe archived counterpart of <code>TsImportEqualsDecl::module_ref</code>\nThe archived counterpart of <code>VarDeclarator::name</code>\nThe archived counterpart of <code>PrivateName::name</code>\nThe archived counterpart of <code>JSXNamespacedName::name</code>\nThe archived counterpart of <code>JSXOpeningElement::name</code>\nThe archived counterpart of <code>JSXClosingElement::name</code>\nThe archived counterpart of <code>JSXAttr::name</code>\nThe archived counterpart of <code>ExportNamespaceSpecifier::name</code>\nThe archived counterpart of <code>TsTypeParam::name</code>\nThe archived counterpart of <code>TsMappedType::name_type</code>\nThe archived counterpart of <code>JSXNamespacedName::ns</code>\nThe archived counterpart of <code>MemberExpr::obj</code>\nThe archived counterpart of <code>SuperPropExpr::obj</code>\nThe archived counterpart of <code>JSXMemberExpr::obj</code>\nThe archived counterpart of <code>WithStmt::obj</code>\nThe archived counterpart of <code>TsIndexedAccessType::obj_type</code>\nThe archived counterpart of <code>UnaryExpr::op</code>\nThe archived counterpart of <code>UpdateExpr::op</code>\nThe archived counterpart of <code>BinExpr::op</code>\nThe archived counterpart of <code>AssignExpr::op</code>\nThe archived counterpart of <code>TsTypeOperator::op</code>\nCreates a corresponding operator. This macro is used to …\nThe archived counterpart of <code>JSXElement::opening</code>\nThe archived counterpart of <code>JSXFragment::opening</code>\nThe archived counterpart of <code>OptChainExpr::optional</code>\nThe archived counterpart of <code>Ident::optional</code>\nTypeScript only. Used in case of an optional parameter.\nThe archived counterpart of <code>ArrayPat::optional</code>\nOnly in an ambient context\nThe archived counterpart of <code>ObjectPat::optional</code>\nOnly in an ambient context\nThe archived counterpart of <code>TsPropertySignature::optional</code>\nThe archived counterpart of <code>TsMethodSignature::optional</code>\nThe archived counterpart of <code>TsMappedType::optional</code>\nThe archived counterpart of <code>ExportNamedSpecifier::orig</code>\n<code>foo</code> in <code>export { foo as bar }</code>\nThe archived counterpart of <code>SetterProp::param</code>\nThe archived counterpart of <code>CatchClause::param</code>\nes2019\nThe archived counterpart of <code>TsParamProp::param</code>\nThe archived counterpart of <code>TsSetterSignature::param</code>\nThe archived counterpart of <code>TsTypePredicate::param_name</code>\nThe archived counterpart of <code>Constructor::params</code>\nThe archived counterpart of <code>ArrowExpr::params</code>\nThe archived counterpart of <code>Function::params</code>\nThe archived counterpart of <code>TsTypeParamDecl::params</code>\nThe archived counterpart of …\nThe archived counterpart of <code>TsCallSignatureDecl::params</code>\nThe archived counterpart of …\nThe archived counterpart of <code>TsMethodSignature::params</code>\nThe archived counterpart of <code>TsIndexSignature::params</code>\nThe archived counterpart of <code>TsFnType::params</code>\nThe archived counterpart of <code>TsConstructorType::params</code>\nThe archived counterpart of <code>Param::pat</code>\nThe archived counterpart of <code>Import::phase</code>\nThe archived counterpart of <code>ImportDecl::phase</code>\nThe archived counterpart of <code>UpdateExpr::prefix</code>\nThe archived counterpart of <code>MemberExpr::prop</code>\nThe archived counterpart of <code>SuperPropExpr::prop</code>\nThe archived counterpart of <code>JSXMemberExpr::prop</code>\nThe archived counterpart of <code>ObjectLit::props</code>\nThe archived counterpart of <code>ObjectPat::props</code>\nThe archived counterpart of <code>TsImportType::qualifier</code>\nThe archived counterpart of <code>Tpl::quasis</code>\nThe archived counterpart of <code>TsTplLitType::quasis</code>\nThe archived counterpart of <code>TplElement::raw</code>\nYou may need to perform. …\nThe archived counterpart of <code>JSXText::raw</code>\nThe archived counterpart of <code>BigInt::raw</code>\nUse <code>None</code> value only for transformations to avoid …\nThe archived counterpart of <code>Str::raw</code>\nUse <code>None</code> value only for transformations to avoid …\nThe archived counterpart of <code>Number::raw</code>\nUse <code>None</code> value only for transformations to avoid …\nThe archived counterpart of <code>ClassProp::readonly</code>\nThe archived counterpart of <code>PrivateProp::readonly</code>\nThe archived counterpart of <code>TsParamProp::readonly</code>\nThe archived counterpart of <code>TsPropertySignature::readonly</code>\nThe archived counterpart of <code>TsIndexSignature::readonly</code>\nThe archived counterpart of <code>TsIndexedAccessType::readonly</code>\nThe archived counterpart of <code>TsMappedType::readonly</code>\nThe archived counterpart of <code>ArrowExpr::return_type</code>\nThe archived counterpart of <code>Function::return_type</code>\nThe archived counterpart of <code>BinExpr::right</code>\nThe archived counterpart of <code>AssignExpr::right</code>\nThe archived counterpart of <code>AssignPat::right</code>\nThe archived counterpart of <code>ForInStmt::right</code>\nThe archived counterpart of <code>ForOfStmt::right</code>\nThe archived counterpart of <code>TsQualifiedName::right</code>\nThe archived counterpart of <code>JSXOpeningElement::self_closing</code>\nThe archived counterpart of <code>Module::shebang</code>\nThe archived counterpart of <code>Script::shebang</code>\nThe archived counterpart of <code>Class::span</code>\nThe archived counterpart of <code>ClassProp::span</code>\nThe archived counterpart of <code>PrivateProp::span</code>\nThe archived counterpart of <code>ClassMethod::span</code>\nThe archived counterpart of <code>PrivateMethod::span</code>\nThe archived counterpart of <code>Constructor::span</code>\nThe archived counterpart of <code>Decorator::span</code>\nThe archived counterpart of <code>StaticBlock::span</code>\nThe archived counterpart of <code>AutoAccessor::span</code>\nThe archived counterpart of <code>VarDecl::span</code>\nThe archived counterpart of <code>VarDeclarator::span</code>\nThe archived counterpart of <code>UsingDecl::span</code>\nThe archived counterpart of <code>ThisExpr::span</code>\nThe archived counterpart of <code>ArrayLit::span</code>\nThe archived counterpart of <code>ObjectLit::span</code>\nThe archived counterpart of <code>UnaryExpr::span</code>\nThe archived counterpart of <code>UpdateExpr::span</code>\nThe archived counterpart of <code>BinExpr::span</code>\nThe archived counterpart of <code>AssignExpr::span</code>\nThe archived counterpart of <code>MemberExpr::span</code>\nThe archived counterpart of <code>SuperPropExpr::span</code>\nThe archived counterpart of <code>CondExpr::span</code>\nThe archived counterpart of <code>CallExpr::span</code>\nThe archived counterpart of <code>NewExpr::span</code>\nThe archived counterpart of <code>SeqExpr::span</code>\nThe archived counterpart of <code>ArrowExpr::span</code>\nThe archived counterpart of <code>YieldExpr::span</code>\nThe archived counterpart of <code>MetaPropExpr::span</code>\nThe archived counterpart of <code>AwaitExpr::span</code>\nThe archived counterpart of <code>Tpl::span</code>\nThe archived counterpart of <code>TaggedTpl::span</code>\nThe archived counterpart of <code>TplElement::span</code>\nThe archived counterpart of <code>ParenExpr::span</code>\nThe archived counterpart of <code>Super::span</code>\nThe archived counterpart of <code>Import::span</code>\nThe archived counterpart of <code>OptChainExpr::span</code>\nThe archived counterpart of <code>OptCall::span</code>\nThe archived counterpart of <code>Function::span</code>\nThe archived counterpart of <code>Param::span</code>\nThe archived counterpart of <code>Ident::span</code>\nThe archived counterpart of <code>IdentName::span</code>\nThe archived counterpart of <code>PrivateName::span</code>\nThe archived counterpart of <code>JSXMemberExpr::span</code>\nThe archived counterpart of <code>JSXNamespacedName::span</code>\nThe archived counterpart of <code>JSXEmptyExpr::span</code>\nThe archived counterpart of <code>JSXExprContainer::span</code>\nThe archived counterpart of <code>JSXSpreadChild::span</code>\nThe archived counterpart of <code>JSXOpeningElement::span</code>\nThe archived counterpart of <code>JSXClosingElement::span</code>\nThe archived counterpart of <code>JSXAttr::span</code>\nThe archived counterpart of <code>JSXText::span</code>\nThe archived counterpart of <code>JSXElement::span</code>\nThe archived counterpart of <code>JSXFragment::span</code>\nThe archived counterpart of <code>JSXOpeningFragment::span</code>\nThe archived counterpart of <code>JSXClosingFragment::span</code>\nThe archived counterpart of <code>BigInt::span</code>\nThe archived counterpart of <code>Str::span</code>\nThe archived counterpart of <code>Bool::span</code>\nThe archived counterpart of <code>Null::span</code>\nThe archived counterpart of <code>Regex::span</code>\nThe archived counterpart of <code>Number::span</code>\nThe archived counterpart of <code>Module::span</code>\nThe archived counterpart of <code>Script::span</code>\nThe archived counterpart of <code>ExportDefaultExpr::span</code>\nThe archived counterpart of <code>ExportDecl::span</code>\nThe archived counterpart of <code>ImportDecl::span</code>\nThe archived counterpart of <code>ExportAll::span</code>\nThe archived counterpart of <code>NamedExport::span</code>\nThe archived counterpart of <code>ExportDefaultDecl::span</code>\nThe archived counterpart of <code>ImportDefaultSpecifier::span</code>\nThe archived counterpart of <code>ImportStarAsSpecifier::span</code>\nThe archived counterpart of <code>ImportNamedSpecifier::span</code>\nThe archived counterpart of <code>ExportNamespaceSpecifier::span</code>\nThe archived counterpart of <code>ExportNamedSpecifier::span</code>\nThe archived counterpart of <code>ArrayPat::span</code>\nThe archived counterpart of <code>ObjectPat::span</code>\nThe archived counterpart of <code>AssignPat::span</code>\nThe archived counterpart of <code>RestPat::span</code>\nThe archived counterpart of <code>AssignPatProp::span</code>\nThe archived counterpart of <code>AssignProp::span</code>\nThe archived counterpart of <code>GetterProp::span</code>\nThe archived counterpart of <code>SetterProp::span</code>\nThe archived counterpart of <code>ComputedPropName::span</code>\nSpan including <code>[</code> and <code>]</code>.\nThe archived counterpart of <code>BlockStmt::span</code>\nSpan including the braces.\nThe archived counterpart of <code>ExprStmt::span</code>\nThe archived counterpart of <code>EmptyStmt::span</code>\nSpan of semicolon.\nThe archived counterpart of <code>DebuggerStmt::span</code>\nThe archived counterpart of <code>WithStmt::span</code>\nThe archived counterpart of <code>ReturnStmt::span</code>\nThe archived counterpart of <code>LabeledStmt::span</code>\nThe archived counterpart of <code>BreakStmt::span</code>\nThe archived counterpart of <code>ContinueStmt::span</code>\nThe archived counterpart of <code>IfStmt::span</code>\nThe archived counterpart of <code>SwitchStmt::span</code>\nThe archived counterpart of <code>ThrowStmt::span</code>\nThe archived counterpart of <code>TryStmt::span</code>\nThe archived counterpart of <code>WhileStmt::span</code>\nThe archived counterpart of <code>DoWhileStmt::span</code>\nThe archived counterpart of <code>ForStmt::span</code>\nThe archived counterpart of <code>ForInStmt::span</code>\nThe archived counterpart of <code>ForOfStmt::span</code>\nThe archived counterpart of <code>SwitchCase::span</code>\nThe archived counterpart of <code>CatchClause::span</code>\nThe archived counterpart of <code>TsTypeAnn::span</code>\nThe archived counterpart of <code>TsTypeParamDecl::span</code>\nThe archived counterpart of <code>TsTypeParam::span</code>\nThe archived counterpart of <code>TsTypeParamInstantiation::span</code>\nThe archived counterpart of <code>TsParamProp::span</code>\nThe archived counterpart of <code>TsQualifiedName::span</code>\nThe archived counterpart of <code>TsCallSignatureDecl::span</code>\nThe archived counterpart of <code>TsConstructSignatureDecl::span</code>\nThe archived counterpart of <code>TsPropertySignature::span</code>\nThe archived counterpart of <code>TsGetterSignature::span</code>\nThe archived counterpart of <code>TsSetterSignature::span</code>\nThe archived counterpart of <code>TsMethodSignature::span</code>\nThe archived counterpart of <code>TsIndexSignature::span</code>\nThe archived counterpart of <code>TsKeywordType::span</code>\nThe archived counterpart of <code>TsThisType::span</code>\nThe archived counterpart of <code>TsFnType::span</code>\nThe archived counterpart of <code>TsConstructorType::span</code>\nThe archived counterpart of <code>TsTypeRef::span</code>\nThe archived counterpart of <code>TsTypePredicate::span</code>\nThe archived counterpart of <code>TsTypeQuery::span</code>\nThe archived counterpart of <code>TsImportType::span</code>\nThe archived counterpart of <code>TsTypeLit::span</code>\nThe archived counterpart of <code>TsArrayType::span</code>\nThe archived counterpart of <code>TsTupleType::span</code>\nThe archived counterpart of <code>TsTupleElement::span</code>\nThe archived counterpart of <code>TsOptionalType::span</code>\nThe archived counterpart of <code>TsRestType::span</code>\nThe archived counterpart of <code>TsUnionType::span</code>\nThe archived counterpart of <code>TsIntersectionType::span</code>\nThe archived counterpart of <code>TsConditionalType::span</code>\nThe archived counterpart of <code>TsInferType::span</code>\nThe archived counterpart of <code>TsParenthesizedType::span</code>\nThe archived counterpart of <code>TsTypeOperator::span</code>\nThe archived counterpart of <code>TsIndexedAccessType::span</code>\nThe archived counterpart of <code>TsMappedType::span</code>\nThe archived counterpart of <code>TsLitType::span</code>\nThe archived counterpart of <code>TsTplLitType::span</code>\nThe archived counterpart of <code>TsInterfaceDecl::span</code>\nThe archived counterpart of <code>TsInterfaceBody::span</code>\nThe archived counterpart of <code>TsExprWithTypeArgs::span</code>\nThe archived counterpart of <code>TsTypeAliasDecl::span</code>\nThe archived counterpart of <code>TsEnumDecl::span</code>\nThe archived counterpart of <code>TsEnumMember::span</code>\nThe archived counterpart of <code>TsModuleDecl::span</code>\nThe archived counterpart of <code>TsModuleBlock::span</code>\nThe archived counterpart of <code>TsNamespaceDecl::span</code>\nThe archived counterpart of <code>TsImportEqualsDecl::span</code>\nThe archived counterpart of <code>TsExternalModuleRef::span</code>\nThe archived counterpart of <code>TsExportAssignment::span</code>\nThe archived counterpart of <code>TsNamespaceExportDecl::span</code>\nThe archived counterpart of <code>TsAsExpr::span</code>\nThe archived counterpart of <code>TsTypeAssertion::span</code>\nThe archived counterpart of <code>TsNonNullExpr::span</code>\nThe archived counterpart of <code>TsSatisfiesExpr::span</code>\nThe archived counterpart of <code>TsConstAssertion::span</code>\nThe archived counterpart of <code>TsInstantiation::span</code>\nThe archived counterpart of <code>Invalid::span</code>\nThe archived counterpart of <code>ImportDecl::specifiers</code>\nThe archived counterpart of <code>NamedExport::specifiers</code>\nThe archived counterpart of <code>ExprOrSpread::spread</code>\nThe archived counterpart of <code>ImportDecl::src</code>\nThe archived counterpart of <code>ExportAll::src</code>\nThe archived counterpart of <code>NamedExport::src</code>\nThe archived counterpart of <code>BlockStmt::stmts</code>\nThe archived counterpart of <code>Class::super_class</code>\nThe archived counterpart of <code>Class::super_type_params</code>\nThe archived counterpart of <code>Ident::sym</code>\nThe archived counterpart of <code>IdentName::sym</code>\nThe archived counterpart of <code>TaggedTpl::tag</code>\nThe archived counterpart of <code>TplElement::tail</code>\nThe archived counterpart of <code>CondExpr::test</code>\nThe archived counterpart of <code>IfStmt::test</code>\nThe archived counterpart of <code>WhileStmt::test</code>\nThe archived counterpart of <code>DoWhileStmt::test</code>\nThe archived counterpart of <code>ForStmt::test</code>\nThe archived counterpart of <code>SwitchCase::test</code>\nNone for <code>default:</code>\nThe archived counterpart of <code>SetterProp::this_param</code>\nThe archived counterpart of <code>TaggedTpl::tpl</code>\nThis is boxed to reduce the type size of Expr.\nThe archived counterpart of <code>TsConditionalType::true_type</code>\nThe archived counterpart of <code>TsTupleElement::ty</code>\nThe archived counterpart of <code>ClassProp::type_ann</code>\nThe archived counterpart of <code>PrivateProp::type_ann</code>\nThe archived counterpart of <code>AutoAccessor::type_ann</code>\nThe archived counterpart of <code>BindingIdent::type_ann</code>\nThe archived counterpart of <code>ArrayPat::type_ann</code>\nThe archived counterpart of <code>ObjectPat::type_ann</code>\nThe archived counterpart of <code>RestPat::type_ann</code>\nThe archived counterpart of <code>GetterProp::type_ann</code>\nThe archived counterpart of <code>TsTypeAnn::type_ann</code>\nThe archived counterpart of <code>TsCallSignatureDecl::type_ann</code>\nThe archived counterpart of …\nThe archived counterpart of <code>TsPropertySignature::type_ann</code>\nThe archived counterpart of <code>TsGetterSignature::type_ann</code>\nThe archived counterpart of <code>TsMethodSignature::type_ann</code>\nThe archived counterpart of <code>TsIndexSignature::type_ann</code>\nThe archived counterpart of <code>TsFnType::type_ann</code>\nThe archived counterpart of <code>TsConstructorType::type_ann</code>\nThe archived counterpart of <code>TsTypePredicate::type_ann</code>\nThe archived counterpart of <code>TsOptionalType::type_ann</code>\nThe archived counterpart of <code>TsRestType::type_ann</code>\nThe archived counterpart of <code>TsParenthesizedType::type_ann</code>\nThe archived counterpart of <code>TsTypeOperator::type_ann</code>\nThe archived counterpart of <code>TsMappedType::type_ann</code>\nThe archived counterpart of <code>TsTypeAliasDecl::type_ann</code>\nThe archived counterpart of <code>TsAsExpr::type_ann</code>\nThe archived counterpart of <code>TsTypeAssertion::type_ann</code>\nThe archived counterpart of <code>TsSatisfiesExpr::type_ann</code>\nThe archived counterpart of <code>CallExpr::type_args</code>\nThe archived counterpart of <code>NewExpr::type_args</code>\nThe archived counterpart of <code>OptCall::type_args</code>\nThe archived counterpart of <code>JSXOpeningElement::type_args</code>\nNote: This field’s name is different from one from babel …\nThe archived counterpart of <code>TsTypeQuery::type_args</code>\nThe archived counterpart of <code>TsImportType::type_args</code>\nThe archived counterpart of <code>TsExprWithTypeArgs::type_args</code>\nThe archived counterpart of <code>TsInstantiation::type_args</code>\nThe archived counterpart of <code>TsTypeRef::type_name</code>\nThe archived counterpart of <code>ImportDecl::type_only</code>\nThe archived counterpart of <code>ExportAll::type_only</code>\nThe archived counterpart of <code>NamedExport::type_only</code>\nThe archived counterpart of <code>TsInferType::type_param</code>\nThe archived counterpart of <code>TsMappedType::type_param</code>\nThe archived counterpart of <code>Class::type_params</code>\nThe archived counterpart of <code>ArrowExpr::type_params</code>\nThe archived counterpart of <code>TaggedTpl::type_params</code>\nThe archived counterpart of <code>Function::type_params</code>\nThe archived counterpart of …\nThe archived counterpart of …\nThe archived counterpart of <code>TsMethodSignature::type_params</code>\nThe archived counterpart of <code>TsFnType::type_params</code>\nThe archived counterpart of <code>TsConstructorType::type_params</code>\nThe archived counterpart of <code>TsTypeRef::type_params</code>\nThe archived counterpart of <code>TsInterfaceDecl::type_params</code>\nThe archived counterpart of <code>TsTypeAliasDecl::type_params</code>\nThe archived counterpart of <code>TsUnionType::types</code>\nThe archived counterpart of <code>TsIntersectionType::types</code>\nThe archived counterpart of <code>TsTplLitType::types</code>\nThe archived counterpart of <code>ForStmt::update</code>\nThe archived counterpart of <code>ClassProp::value</code>\nThe archived counterpart of <code>PrivateProp::value</code>\nThe archived counterpart of <code>AutoAccessor::value</code>\nThe archived counterpart of <code>JSXAttr::value</code>\nBabel uses Expr instead of JSXAttrValue\nThe archived counterpart of <code>JSXText::value</code>\nThe archived counterpart of <code>BigInt::value</code>\nThe archived counterpart of <code>Str::value</code>\nThe archived counterpart of <code>Bool::value</code>\nThe archived counterpart of <code>Number::value</code>\n<strong>Note</strong>: This should not be <code>NaN</code>. Use crate::Ident to …\nThe archived counterpart of <code>KeyValuePatProp::value</code>\nThe archived counterpart of <code>AssignPatProp::value</code>\nThe archived counterpart of <code>KeyValueProp::value</code>\nThe archived counterpart of <code>AssignProp::value</code>\nThe archived counterpart of <code>ImportDecl::with</code>\nThe archived counterpart of <code>ExportAll::with</code>\nThe archived counterpart of <code>NamedExport::with</code>\nGlobal HANDLER implementation for the plugin for error …\nPlugin’s environment metadata context.\nProxy to the host’s data not attached to the AST, like …\nUsed for error reporting in transform.\nIndexable key to the metadata context for a transform …\nAn arbitary metadata for given Program to run transform in …\nProxy to the comments for the Program passed into plugin. …\nProxy to the sourceMap for the Program passed into plugin. …\nA struct to exchange allocated data between memory spaces.\nA struct implements <code>swc_common::comments::Comments</code> for the …\nAn arbitary metadata for given Program to run transform in …\nProxy to the comments for the Program passed into plugin. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns metadata value for given key.\nReturns an experimental metadata value if exists. Returned …\nReturns experimental metadata context, but returns whole …\nReturns current plugin’s configuration as a JSON string. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProxy to the sourceMap for the Program passed into plugin. …\nNoop\nUtility proc macro to add …")